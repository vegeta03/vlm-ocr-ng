// Mixins
// This file contains all application-wide SCSS mixins

// Import Sass modules
@use "sass:list";
@use "sass:math";
@use "variables" as vars;

// Media query mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: vars.$breakpoint-xl) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: (vars.$breakpoint-sm - 1)) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: (vars.$breakpoint-md - 1)) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: (vars.$breakpoint-lg - 1)) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: (vars.$breakpoint-xl - 1)) { @content; }
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Elevation mixins
@mixin elevation($level) {
  @if $level == 1 {
    box-shadow: vars.$elevation-1;
  } @else if $level == 2 {
    box-shadow: vars.$elevation-2;
  } @else if $level == 3 {
    box-shadow: vars.$elevation-3;
  }
}

// Typography mixins
@mixin title-large {
  font-size: vars.$font-size-title-large;
  font-weight: vars.$font-weight-medium;
  line-height: vars.$line-height-tight;
}

@mixin title-medium {
  font-size: vars.$font-size-title-medium;
  font-weight: vars.$font-weight-medium;
  line-height: vars.$line-height-tight;
}

@mixin body-large {
  font-size: vars.$font-size-body-large;
  font-weight: vars.$font-weight-regular;
  line-height: vars.$line-height-normal;
}

@mixin body-medium {
  font-size: vars.$font-size-body-medium;
  font-weight: vars.$font-weight-regular;
  line-height: vars.$line-height-normal;
}

@mixin body-small {
  font-size: vars.$font-size-body-small;
  font-weight: vars.$font-weight-regular;
  line-height: vars.$line-height-normal;
}

// Transition mixin
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: list.append($transitions, $property vars.$transition-standard, comma);
  }
  transition: $transitions;
}

// Button mixin
@mixin button-base {
  padding: vars.$font-size-body-small vars.$spacing-md;
  border-radius: vars.$border-radius-pill;
  font-weight: vars.$font-weight-medium;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  @include transition(background-color, box-shadow);
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

